/*
    it's easy to notice that we only need to calculate the outcome of the last round
    since 2^n > sum(0, n-1) (2^i)
    so the prob of the ith player winning is n / N
    where n = tickets bought in mth round, N = total tickets bought in mth round
*/
#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define vll vector<ll>
#define pii pair<int, int>
#define vii vector<pii>
#define vs vector<string>
#define vb vector<bool>
#define vi vector<int>
#define vd vector<double>
#define vvi vector< vector<int> >
#define vvii vector< vector< pii > >
#define ld long double
#define mapii map<int, int>
#define mapsi map<string, int>
#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
//#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pie  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

ll n, m;
ll accum[31], arr[10001][31];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	while(cin >> n >> m)
	{
		if (!n && !m) break;
		reset(accum, 0);
		rep(i, 0, n)
		{
			rep(j, 0, m)
			{
				cin >> arr[i][j];
				accum[j] += arr[i][j];
			}
		}
		double p = accum[m-1];
		rep(i, 0, n)
		{
			ll x = arr[i][m-1];
			if (!x) cout << "0 / 1\n";
			else
			{
				ll temp = p;
				ll gcd = __gcd(temp, x);
				temp /= gcd, x /= gcd;
				cout << x << " / " << temp << endl;
			}
		}
	}
	return 0;
}

