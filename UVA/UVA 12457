/*
    decide whether or not you'll win this game, move on with the according probability
    if you won n matches, return 1.
    if 2n-1 games have passed and you're not the winner, return 0
*/
#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define vll vector<ll>
#define pii pair<int, int>
#define vii vector<pii>
#define vs vector<string>
#define vb vector<bool>
#define vi vector<int>
#define vd vector<double>
#define vvi vector< vector<int> >
#define vvii vector< vector< pii > >
#define ld long double
#define mapii map<int, int>
#define mapsi map<string, int>
#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
//#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pie  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

int n;
double p, memo[50][26];

double solve(int played, int won)
{
	if (won == n) return 1.;
	if (played == 2*n - 1) return 0.;
	if (memo[played][won] == memo[played][won]) return memo[played][won];
	double ret = solve(played+1, won+1) * p + solve(played+1, won) * (1. - p);
	return memo[played][won] = ret;
}

int main()
{
	//ios_base::sync_with_stdio(0);
	//cin.tie(0);
	int tc;
	cin >> tc;
	while(tc--)
	{
		reset(memo, -1);
		cin >> n >> p;
		cout << fixed << setprecision(2) << solve(0, 0) << endl;
	}

	return 0;
}

