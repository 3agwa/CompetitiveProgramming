/*
    basic problem, simply pick or leave with the given probability and return the solution
*/
#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define vll vector<ll>
#define pii pair<int, int>
#define vii vector<pii>
#define vs vector<string>
#define vb vector<bool>
#define vi vector<int>
#define vd vector<double>
#define vvi vector< vector<int> >
#define vvii vector< vector< pii > >
#define ld long double
#define mapii map<int, int>
#define mapsi map<string, int>
#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
//#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pie  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

double p, memo[2001][2001];
double n, t;

double solve(int _t, int rem)
{
	if (_t == t) return rem;
	if (memo[_t][rem] == memo[_t][rem]) return memo[_t][rem];
	double ret = solve(_t+1, rem) * (1. - p);
	if (rem-1 >= 0) ret += solve(_t+1, rem-1) * p;
	return memo[_t][rem] = ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	reset(memo, -1);
	cin >> n >> p >> t;
	cout << fixed << setprecision(9) << n - solve(0, n) << endl;
	return 0;
}

