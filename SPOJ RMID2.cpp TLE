#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long
#define ull unsigned long long
#define vll vector<ll>
#define pii pair<int, int>
#define vii vector<pii>
#define vs vector<string>
#define vb vector<bool>
#define vi vector<int>
#define vd vector<double>
#define vvi vector< vector<int> >
#define vvii vector< vector< pii > >
#define ld long double
#define mapii map<int, int>
#define mapsi map<string, int>
#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pie  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}
 
int bit[100001];
 
void update(int idx, int val)
{
	while(idx < 100001)
	{
		bit[idx] += val;
		idx += (idx & -idx);
	}
}
 
int query(int idx)
{
	int ret = 0;
 
	while(idx > 0)
	{
		ret += bit[idx];
		idx -= (idx & -idx);
	}
 
	return ret;
}
 
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
 
	int tc;
 
	cin >> tc;
 
	while(tc--)
	{
		reset(bit, 0);
		vi vec;
		set<int> temp;
		int n;
		while(cin >> n && n) vec.push_back(n), temp.insert(n);
 
		mapii mp, rev;
		int t = 1;
		for(auto i : temp) if (i != -1) rev[t] = i, mp[i] = t++;
 
		rep(i, 0, sz(vec))
		{
			if (vec[i] == -1)
			{
				int st = 1, en = 100000, mid, ret = -1;
				int median = (query(100000) + 1)/ 2;
				while(st <= en)
				{
					mid = (st+en)/2;
 
					int hoba = query(mid);
 
					if (hoba < median) st = mid + 1;
					else en = mid - 1, ret = mid;
				}
 
				update(ret, -1);
				cout << rev[ret] << endl;
			}
			else
			{
				int x = mp[vec[i]];
				update(x, 1);
			}
		}
 
	}
 
	return 0;
}
 
 
