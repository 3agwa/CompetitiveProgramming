#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define ull unsigned long long
#define vll vector<ll>
#define pii pair<int, int>
#define vii vector<pii>
#define vs vector<string>
#define vb vector<bool>
#define vi vector<int>
#define vd vector<double>
#define vvi vector< vector<int> >
#define vvii vector< vector< pii > >
#define ld long double
#define mapii map<int, int>
#define mapsi map<string, int>
#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pie  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n, k;
	cin >> n >> k;

	vll sum(n + 1);
	vll mx(n + 1);
	vll dp(n + 1);


	erep(i, 1, n)
	{
		int x;
		cin >> x;
		sum[i] = x + sum[i - 1];
	}
	if (!k) cout << sum[n] << endl;
	else
	{
		erep(i, 1, n)
			mx[i] = max(mx[i - 1], sum[i]);

		ll ret = 0;

		erep(i, 1, k)
		{
			erep(j, 1, n)
			{
				dp[j] = mx[j - 1] - sum[j];
			}

			erep(j, 1, n)
				mx[j] = max(mx[j - 1], dp[j] + sum[j]);

			ret = max(ret, dp[n]);
		}
		cout << ret << endl;
	}

	return 0;
}

